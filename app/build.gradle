apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'dagger.hilt.android.plugin'

apply plugin: 'com.google.gms.google-services'

apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.rootstrap.android"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 42
        versionName "1.0"
        testInstrumentationRunner 'com.rootstrap.android.CustomTestRunner'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    signingConfigs {
        releaseConfig {
            keyAlias projectKeyAlias
            keyPassword projectKeyPassword
            storeFile file(projectStoreFile)
            storePassword projectStorePassword
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }

        release {
            signingConfig signingConfigs.releaseConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    kapt {
        correctErrorTypes true
    }

    flavorDimensions "server"

    productFlavors {
        dev {
            dimension "server"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            buildConfigField("String", "API_URL", "\"https://rails5-api-base.herokuapp.com/api/v1/\"")
            buildConfigField("String", "SECURE_KEY_ALIAS", "\"$projectKeyAlias\"")
            buildConfigField("String", "SECURE_FILE_NAME", "\"appPreferencesDev\"")
        }

        staging {
            dimension "server"
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
            buildConfigField("String", "API_URL", "\"https://proj-staging.herokuapp.com/api/\"")
            buildConfigField("String", "SECURE_KEY_ALIAS", "\"$projectKeyAlias\"")
            buildConfigField("String", "SECURE_FILE_NAME", "\"appPreferencesStaging\"")
        }

        prod {
            dimension "server"
            buildConfigField("String", "API_URL", "\"https://proj-production.herokuapp.com/api/\"")
            buildConfigField("String", "SECURE_KEY_ALIAS", "\"$projectKeyAlias\"")
            buildConfigField("String", "SECURE_FILE_NAME", "\"appPreferences\"")
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def apk = output.outputFile
            def newName = apk.name.replace(".apk", "-v" + variant.versionName + ".apk")
            newName = newName.replace("-" + variant.buildType.name, "")

            outputFileName = new File("./apks/" + newName)
        }
    }

    configurations {
        ktlint
    }

    kotlinOptions {
        freeCompilerArgs = ["-Xallow-result-return-type"]
    }

    task ktlint(type: JavaExec, group: "verification") {
        description = "Check Kotlin code style."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "src/**/*.kt"
        // to generate report in checkstyle format prepend following args:
        // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
        // see https://github.com/pinterest/ktlint#usage for more
    }

    check.dependsOn ktlint

    task ktlintFormat(type: JavaExec, group: "formatting") {
        description = "Fix Kotlin code style deviations."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "-F", "src/**/*.kt"
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    testOptions {
        unitTests {
            includeAndroidResources = true
            animationsDisabled = true
        }
    }
}

dependencies {
    def room_version = "2.3.0"
    def lifecycle_version = "2.4.0"
    def mockkVersion = '1.12.0'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1"
    testImplementation 'android.arch.core:core-testing:1.1.1'
    testImplementation "io.mockk:mockk:$mockkVersion"

    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.3.1'

    //---- ROOM ----
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    //---- LIFECYCLE ----]
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //---- GOOGLE JSON SERIALIZER/DESERIALIZER ----
    implementation 'com.google.code.gson:gson:2.8.6'

    //---- MixPanel ----
    implementation 'com.mixpanel.android:mixpanel-android:5.6.1'

    //---- Firebase ----
    implementation platform('com.google.firebase:firebase-bom:28.4.2')
    implementation 'com.google.firebase:firebase-core:20.0.0'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.5.31'

    //---- Image ----
    implementation group: 'com.github.bumptech.glide', name: 'glide', version: '4.10.0'

    //---- Network ----
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.squareup.moshi:moshi-kotlin:1.12.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'

    //---- Events ----
    implementation 'com.squareup:otto:1.3.8'

    //---- Linters ----
    ktlint "com.pinterest:ktlint:0.35.0"

    //---- Hilt ----
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    //security crypto
    implementation "androidx.security:security-crypto:1.1.0-alpha03"

    //nav component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
}
